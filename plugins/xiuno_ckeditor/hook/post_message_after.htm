<input type="hidden" name="doctype" value="2">
<script src="plugin/ph_ckeditor/ckeditor/ckeditor.js?<?php echo time();?>"></script>
<script src="plugin/ph_ckeditor/ckeditor/translations/zh-cn.js?<?php echo time();?>"></script>
<script>

function htmlDecode (text){
 
    //1.首先动态创建一个容器标签元素，如DIV

    var temp = document.createElement("div");

    //2.然后将要转换的字符串设置为这个元素的innerHTML(ie，火狐，google都支持)

    temp.innerHTML = text;

    //3.最后返回这个元素的innerText(ie支持)或者textContent(火狐，google支持)，即得到经过HTML解码的字符串了。

    var output = temp.innerText || temp.textContent;

    temp = null;

    return output;

}

    class UploadAdapter {
        constructor(loader) {
            this.loader = loader;
        }
        upload() {
            return new Promise((resolve, reject) => {
                const data = new FormData();
                data.append('upload', this.loader.file);
                data.append('allowSize', 10);//允许图片上传的大小/兆
                // $.xpost('plugin/ph_ckeditor/upload/local/upload.php', data, function(code, message) {
                //     if(code == 0) {
                //         alert('成功');
                //     } else {
                //         alert('错误：'+message);
                //     }
                // })
                $.ajax({
                    url: 'plugin/ph_ckeditor/upload/upload.php',
                    type: 'POST',
                    data: data,
                    dataType: 'json',
                    processData: false,
                    contentType: false,
                    success: function (data) {
                        if (data.res) {
                            resolve({
                                default: data.url
                            });
                        } else {
                            reject(data.msg);
                        }

                    }
                });

            });
        }
        abort() {
        }
    }

    let _ckeditTemp = "";

    // window.onload = function(){
        ClassicEditor.create(document.querySelector("#message"),{
            // toolbar: {
            //     items: ["undo", "redo", "bold", "italic", "blockQuote", "ckfinder", "imageTextAlternative", "imageUpload", "heading", "imageStyle:full", "imageStyle:side", "link", "numberedList", "bulletedList", "mediaEmbed", "insertTable", "tableColumn", "tableRow", "mergeTableCells"]
            // },
            // 设置编辑器语言
            language: 'zh-cn',
            
            // 设置图片上传地址
            ckfinder: {
                uploadUrl: 'plugin/ph_ckeditor/upload/upload.php'
            }
        })
            .then(editor => {
                myEditor = editor;

                // console.log(myEditor)

                // console.log(Array.from( editor.ui.componentFactory.names() ));

                // 加载图片上传适配器
                // myEditor.plugins.get('FileRepository').createUploadAdapter = (loader)=>{
                //     return new UploadAdapter(loader);
                // };

                // 实时更新编辑内容
                myEditor.model.document.on('change:data', function () {
                    // console.log(myEditor);
                    // console.log(myEditor.getData())
                    let _arr = myEditor.getData().split("\n\n");
                    for (let i = 0; i < _arr.length; i++) {
                        if (_arr[i][0] == '|' && _arr[i][_arr[i].length-1] == "|") {
                            if (_arr[i].indexOf('---') == -1) {
                                _arr2 = _arr[i].split("\n");
                                _arr3 = _arr2[0].split(" | ");
                                console.log('-->',_arr2[0].split("\t").length);
                                let _td = '|';
                                for (let k = 0; k < _arr3.length; k++) {
                                    _td += ' -------- |'
                                }
                                _arr2.splice(1,0,_td);
                                _arr[i] = _arr2.join("\n");
                            }
                        }
                    }
                    // console.log(_arr)
                    document.querySelector("#message").innerHTML = _ckeditTemp = _arr.join("\n\n");
                    // $("#" + editorId).val(editor.getData());
                });

                document.querySelector("#message").addEventListener('DOMSubtreeModified', function(e) {
                    // console.log('#message 改变')
                    let _temp = document.querySelector("#message").innerHTML;
                    if (!_temp) return;
                    // console.log(_temp)
                    _temp = htmlDecode(_temp)
                    // console.log(_ckeditTemp)
                    if (_temp != _ckeditTemp) {
                        // console.log('不一样')
                        _temp = _temp.split("\n");
                        _temp = _temp.join('\n\n');
                        // console.log(_temp)
                        myEditor.setData(_temp)
                    }
                })

                // if (window.smms_cpave) {
                    window.KindEditor = {}
                    KindEditor.insertHtml = (t,html) => {
                        // console.log('我被执行了')
                        // myEditor.setData(myEditor.getData()+html)
                        document.querySelector("#message").innerHTML += html;
                    } 
                // }
            })
            .catch(error => {
                console.error(error);
            });
    // }
</script>